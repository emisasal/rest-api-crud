// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Books //

model Book {
  book_id      Int           @id @default(autoincrement())
  title        String
  description  String
  author       Author        @relation(fields: [author_id], references: [author_id])
  author_id    Int
  genre        Genre         @relation(fields: [genre_id], references: [genre_id])
  genre_id     Int
  publisher    Publisher     @relation(fields: [publisher_id], references: [publisher_id])
  publisher_id Int
  price        Decimal       @db.Money
  publish_date DateTime      @db.Timestamptz(3)
  isbn         String        @unique
  OrderDetail  OrderDetail[]
  Review       Review[]
}

model Author {
  author_id  Int     @id @default(autoincrement())
  first_name String
  last_name  String
  bio        String?
  Book       Book[]
}

model Genre {
  genre_id    Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  Book        Book[]
}

model Publisher {
  publisher_id   Int     @id @default(autoincrement())
  publisher_name String
  contact_name   String?
  phone_number   String
  Book           Book[]
}

// Orders

model Order {
  order_id     Int           @id @default(autoincrement())
  customer     Customer      @relation(fields: [customer_id], references: [customer_id], onDelete: Cascade)
  customer_id  Int
  order_date   DateTime      @default(now()) @db.Timestamptz(3)
  total_amount Decimal       @db.Money
  OrderDetail  OrderDetail[]
}

model OrderDetail {
  order_detail_id Int     @id @default(autoincrement())
  order           Order   @relation(fields: [order_id], references: [order_id])
  order_id        Int
  book            Book    @relation(fields: [book_id], references: [book_id], onDelete: Cascade)
  book_id         Int
  quantity        Int
  price_per_item  Decimal @db.Money
}

// Customers

model Customer {
  customer_id       Int      @id @default(autoincrement())
  first_name        String
  last_name         String
  email             String
  registration_date DateTime @default(now()) @db.Timestamptz(3)
  Order             Order[]
  Review            Review[]
}

model Review {
  review_id   Int      @id @default(autoincrement())
  book        Book     @relation(fields: [book_id], references: [book_id], onDelete: Cascade)
  book_id     Int
  customer    Customer @relation(fields: [customer_id], references: [customer_id])
  customer_id Int
  rating      Int
  comment     String?
  review_date DateTime @default(now()) @db.Timestamptz(3)
}
